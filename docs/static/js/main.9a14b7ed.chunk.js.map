{"version":3,"sources":["components/DisplayTimeComponent.js","components/ControlButtonComponent.js","components/DisplayLapTimeComponent.js","components/StopWatchComponent.js","App.js","reportWebVitals.js","index.js"],"names":["DisplayTimeComponent","time","hour","minute","second","millisec","displayHour","justify","gutter","style","color","ControlButtonComponent","handleClick","labelBTN","styleBTN","icon","type","shape","size","className","onClick","DisplayLapTimeComponent","listLapTime","displayTable","length","columns","title","dataIndex","key","align","dataSource","pagination","pageSize","position","StopWatchComponent","displayControlButton","useState","setTime","intervalTime","setintervalTime","status","setStatus","setlistLapTime","currentHour","currentMin","currentSecond","currentMilliSec","runWatch","updateTime","prevTime","calLapTime","prevLap","currentLap","millisecPrevLap","timeObjTomillisec","diffMillisec","hourLapTime","Math","floor","minuteLaptime","secondLapTime","millisecLapTime","timeObj","setInterval","CaretRightOutlined","splitTimeObj","newLapTime","lap","splitTimeText","lapTimeText","prevListLapTime","FieldTimeOutlined","clearInterval","PauseOutlined","ReloadOutlined","App","reportWebVitals","onPerfEntry","Function","then","getCLS","getFID","getFCP","getLCP","getTTFB","ReactDOM","render","StrictMode","document","getElementById"],"mappings":"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","file":"static/js/main.9a14b7ed.chunk.js","sourcesContent":["import React from 'react'\r\nimport { Row, Col } from 'antd';\r\n\r\nfunction DisplayTimeComponent({time}) {\r\n\tconst {hour, minute, second, millisec} = time\r\n\tconst displayHour = hour === 0 ? '' : hour < 10 ? <Col><h1>{`0${hour}`}</h1></Col> : <Col><h1>{hour}</h1></Col>\r\n\treturn (\r\n\t\t<div>\r\n\t\t\t<Row justify=\"center\" gutter={[16]}>\r\n\t\t\t\t{displayHour}\r\n\t\t\t\t{displayHour ? <Col><h1>:</h1></Col> : ''}\r\n\t\t\t\t<Col><h1>{minute < 10 ? `0${minute}` : minute}</h1></Col>\r\n\t\t\t\t<Col><h1>:</h1></Col>\r\n\t\t\t\t<Col><h1>{second < 10 ? `0${second}` : second}</h1></Col>\r\n\t\t\t\t<Col><h1>:</h1></Col>\r\n\t\t\t\t<Col><h1 style={{color:'lightblue'}}>{millisec < 10 ? `0${millisec}` : millisec}</h1></Col>\r\n\t\t\t</Row>\r\n\t\t</div>\r\n\t)\r\n}\r\n\r\nexport default DisplayTimeComponent;","import React from 'react'\r\nimport { Button } from 'antd';\r\n\r\nfunction ControlButtonComponent({handleClick, labelBTN, styleBTN, icon}) {\r\n\treturn (\r\n\t\t<div>\r\n\t\t\t<Button type=\"primary\" icon={icon ? icon : ''} shape=\"round\" size=\"large\" className={styleBTN} onClick={handleClick}>{labelBTN}</Button>\r\n\t\t</div>\r\n\t)\r\n}\r\n\r\nexport default ControlButtonComponent\r\n","import React from 'react'\r\nimport { Table } from 'antd';\r\n\r\nfunction DisplayLapTimeComponent({listLapTime}) {\r\n\tconst columns = [\r\n\t\t{title: 'Lap', dataIndex: 'lap', key: 'lap'},\r\n\t\t{title: 'Lap Time', dataIndex:'lapTimeText', key:'lapTimeText', align: 'right'},\r\n\t\t{title: 'Split Time', dataIndex:'splitTimeText', key:'splitTimeText', align: 'right'}\r\n\t]\r\n\tconst displayTable = listLapTime.length > 0 ? <Table columns={columns} dataSource={listLapTime} pagination={{ pageSize: 5, position: ['none','bottomCenter']}}></Table> : ''\r\n\treturn (\r\n\t\t<div className=\"container-laptime\">\r\n\t\t\t{displayTable}\r\n\t\t</div>\r\n\t)\r\n}\r\n\r\nexport default DisplayLapTimeComponent\r\n","import React, {useState} from 'react'\r\nimport DisplayTime from './DisplayTimeComponent'\r\nimport ControlButton from './ControlButtonComponent'\r\nimport DisplayLabTime from './DisplayLapTimeComponent'\r\nimport { Row, Col } from 'antd';\r\nimport { CaretRightOutlined, PauseOutlined, FieldTimeOutlined, ReloadOutlined } from '@ant-design/icons';\r\n\r\nfunction StopWatchComponent() {\r\n\tconst [time, setTime] = useState({hour: 0, minute: 0, second: 0, millisec: 0})\r\n\tconst [intervalTime, setintervalTime] = useState()\r\n\tconst [status, setStatus] = useState(0)\r\n\tconst [listLapTime, setlistLapTime] = useState([])\r\n\r\n\tlet currentHour = time.hour\r\n\tlet currentMin = time.minute\r\n\tlet currentSecond = time.second\r\n\tlet currentMilliSec = time.millisec\r\n\r\n\tconst runWatch = () => {\r\n\t\tcurrentMilliSec++\r\n\t\tif (currentMin === 60) {\r\n\t\t\tcurrentHour++\r\n\t\t\tcurrentMin = 0\r\n\t\t}\r\n\t\tif (currentSecond === 60) {\r\n\t\t\tcurrentMin++\r\n\t\t\tcurrentSecond = 0\r\n\t\t}\r\n\t\tif (currentMilliSec === 100) {\r\n\t\t\tcurrentSecond++\r\n\t\t\tcurrentMilliSec = 0\r\n\t\t}\r\n\t\tlet updateTime = {\r\n\t\t\thour: currentHour,\r\n\t\t\tminute: currentMin,\r\n\t\t\tsecond: currentSecond,\r\n\t\t\tmillisec: currentMilliSec\r\n\t\t}\r\n\t\treturn setTime(prevTime => ({...prevTime, ...updateTime}))\r\n\t}\r\n\r\n\tconst startTime = () => {\r\n\t\tif (status === 0) {\r\n\t\t\tsetStatus(1)\r\n\t\t\trunWatch()\r\n\t\t\tsetintervalTime(setInterval(runWatch, 10))\r\n\t\t}\r\n\t}\r\n\r\n\tconst stopTime = () => {\r\n\t\tif (status === 1) {\r\n\t\t\tsetStatus(2)\r\n\t\t\tclearInterval(intervalTime)\r\n\t\t}\r\n\t}\r\n\r\n\tconst resumeTime = () => {\r\n\t\tif(status === 2){\r\n\t\t\tsetStatus(1)\r\n\t\t\trunWatch()\r\n\t\t\tsetintervalTime(setInterval(runWatch, 10))\r\n\t\t}\r\n\t}\r\n\r\n\tconst lapTime = () => {\r\n\t\tlet prevLap = listLapTime[0] ? listLapTime[0].splitTimeObj : {hour: 0, minute: 0, second: 0, millisec: 0}\r\n\t\t// แปลง {hour: 0, minute: 0, second: 0, millisec: 0} เก็บไว้เป็น millisec ก่อนนำไปคำนวณแล้วแปลง format กลับมา\r\n\t\tlet newLapTime = {\r\n\t\t\tkey: listLapTime.length + 1,\r\n\t\t\tlap: listLapTime.length + 1,\r\n\t\t\tsplitTimeText: `${time.hour === 0 ? '' : time.hour < 10 ? \"0\"+time.hour+\":\" : time.hour+\":\"}${time.minute < 10 ? \"0\"+time.minute : time.minute}:${time.second < 10 ? \"0\"+time.second : time.second}:${time.millisec < 10 ? \"0\"+time.millisec : time.millisec}`,\r\n\t\t\tlapTimeText : calLapTime(prevLap, {...time}),\r\n\t\t\tsplitTimeObj : {...time}\r\n\t\t}\r\n\t\tsetlistLapTime(prevListLapTime => ([newLapTime, ...prevListLapTime]))\r\n\t}\r\n\r\n\tconst calLapTime = (prevLap, currentLap) => {\r\n\t\tlet millisecPrevLap = timeObjTomillisec(prevLap)\r\n\t\tlet millisecCurrentLap = timeObjTomillisec(currentLap)\r\n\t\tlet diffMillisec = millisecCurrentLap - millisecPrevLap\r\n\t\tlet hourLapTime = Math.floor(diffMillisec / (60 * 60 * 1000))\r\n\t\tdiffMillisec = diffMillisec % (60 * 60 * 1000)\r\n\t\tlet minuteLaptime = Math.floor(diffMillisec / (60 * 1000))\r\n\t\tdiffMillisec = diffMillisec % (60 * 1000)\r\n\t\tlet secondLapTime = Math.floor(diffMillisec / 1000)\r\n\t\tdiffMillisec = diffMillisec % 1000\r\n\t\tlet millisecLapTime = Math.floor(diffMillisec/10)\r\n\t\tlet lapTimeText = `${hourLapTime === 0 ? '' : hourLapTime < 10 ? \"0\"+hourLapTime+\":\" : hourLapTime+\":\"}${minuteLaptime < 10 ? \"0\"+minuteLaptime : minuteLaptime}:${secondLapTime < 10 ? \"0\"+secondLapTime : secondLapTime}:${millisecLapTime < 10 ? \"0\"+millisecLapTime: millisecLapTime}`\r\n\t\treturn lapTimeText\r\n\t}\r\n\r\n\tconst timeObjTomillisec = (timeObj) => {\r\n\t\tlet hourToMillisec = timeObj.hour * 60 * 60 * 1000\r\n\t\tlet minuteToMillisec = timeObj.minute * 60 * 1000\r\n\t\tlet secondToMillisec = timeObj.second * 1000\r\n\t\tlet millsec = timeObj.millisec * 10 // multiply by 10 because time on UI is not real millisec (real millisec is 0-999 but in UI show 0-99)\r\n\t\treturn (hourToMillisec + minuteToMillisec + secondToMillisec + millsec)\r\n\t}\r\n\r\n\tconst resetTime = () => {\r\n\t\tsetStatus(0)\r\n\t\tsetTime({hour: 0,\tminute: 0, second: 0,\tmillisec: 0})\r\n\t\tsetlistLapTime([])\r\n\t}\r\n\r\n\tlet displayControlButton\r\n\t// status = 0 , stopwatch is not running\r\n\t// status = 1 , stopwatch is running \r\n\t// status = 2 , stopwatch is running but user press stop button\r\n\tif (status === 0) {\r\n\t\tdisplayControlButton = <Row gutter={[16,16]} justify=\"center\"><Col><ControlButton handleClick={startTime} icon={<CaretRightOutlined />} styleBTN='start-button' labelBTN='Start' /></Col></Row>\r\n\t}else if(status === 1){\r\n\t\tdisplayControlButton = <Row gutter={[16,16]} justify=\"center\"> \r\n\t\t\t<Col><ControlButton handleClick={lapTime} icon={<FieldTimeOutlined />} styleBTN='lap-button' labelBTN='Lap' /></Col>\r\n\t\t\t<Col><ControlButton handleClick={stopTime} icon={<PauseOutlined />} styleBTN='pause-button' labelBTN='Pause' /></Col>\r\n\t\t</Row>\r\n\t}else if(status === 2){\r\n\t\tdisplayControlButton = <Row gutter={[16, 16]} justify=\"center\">\r\n\t\t\t<Col><ControlButton handleClick={resetTime} icon={<ReloadOutlined />} styleBTN='reset-button' labelBTN='Reset' /></Col>\r\n\t\t\t<Col><ControlButton handleClick={resumeTime} icon={<CaretRightOutlined />} styleBTN='resume-button' labelBTN='Resume' /></Col>\r\n\t\t</Row>\r\n\t}\r\n\r\n\treturn (\r\n\t\t<div className=\"container-stopwatch\">\t\r\n\t\t\t<div>\r\n\t\t\t\t<DisplayTime time={time} />\r\n\t\t\t\t{displayControlButton}\r\n\t\t\t</div>\r\n\t\t\t<hr />\r\n\t\t\t<DisplayLabTime listLapTime={listLapTime} />\r\n\t\t</div>\r\n\t)\r\n}\r\n\r\nexport default StopWatchComponent\r\n","import React from 'react'\nimport './App.css';\nimport StopWatch from './components/StopWatchComponent'\n\nfunction App() {\n\n  return (\n    <div className=\"App\">\n      <StopWatch />\n    </div>\n  );\n}\n\nexport default App;\n","const reportWebVitals = onPerfEntry => {\n  if (onPerfEntry && onPerfEntry instanceof Function) {\n    import('web-vitals').then(({ getCLS, getFID, getFCP, getLCP, getTTFB }) => {\n      getCLS(onPerfEntry);\n      getFID(onPerfEntry);\n      getFCP(onPerfEntry);\n      getLCP(onPerfEntry);\n      getTTFB(onPerfEntry);\n    });\n  }\n};\n\nexport default reportWebVitals;\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport 'antd/dist/antd.css';\nimport './index.css';\nimport App from './App';\nimport reportWebVitals from './reportWebVitals';\n\nReactDOM.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>,\n  document.getElementById('root')\n);\n\n// If you want to start measuring performance in your app, pass a function\n// to log results (for example: reportWebVitals(console.log))\n// or send to an analytics endpoint. Learn more: https://bit.ly/CRA-vitals\nreportWebVitals();\n"],"sourceRoot":""}